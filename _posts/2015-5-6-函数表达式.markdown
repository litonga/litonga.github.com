---
layout: post
title:  函数表达式
date:   2012-05-6 18:08:48 +0800
categories: javascript
---




函数表达式： 是js中创建函数的一种方式；
定义函数的方式有两种：
函数声明。
函数表达式。
函数声明的特点是声明提升(function declartion  hoisting)，可以在函数声明之前调用该函数；
```javascript
       sayHi();
       function sayHi(){   alert(‘Hi !!’);     }
```
函数表达式创建函数    
函数声明创建函数
非标准属性 name
‘’	
函数名
声明提前	无	有
根据条件创建不同的函数
可
否

 函数表达式使用匿名函数（anonymous function），该函数的name属性是空字符串。
 在把函数当成值来使用的情况下，都可以使用匿名函数。不过，这不是匿名函数的唯一用途。

递归
使用函数声明创建的递归函数：
```javascript
  Function functorial  ( num )
{
       If    (  num  <=  1) { return  1; }
       Else  { return  num *arguments.callee (num-1);  }
}
```

但在严格模式下，不能通过脚本访问arguments.callee。
函数表达式创建递归函数：
```javascript
Var factorial = ( Function f ( num )
{
       If    (  num  <=  1) { return  1; }
       Else  { return  num *f (num-1);  }
});
```
这种方式在严格模式和非严格模式下都可以。
 
闭包
闭包：是指有权访问另一个函数作用域中的变量的函数
示例：
```javascript
fa( return f(){});
```
f()有权访问fa()中的其他变量，所以f()是一个闭包，

如果
```javascript
function createFunctions(){
    var arr = [];
 for(var i=0;i<10; i++){
   arr[i] = function(){return i;}
}
return arr;
}
```
